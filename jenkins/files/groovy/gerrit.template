#!groovy
import jenkins.model.Jenkins
import com.sonyericsson.hudson.plugins.gerrit.trigger.GerritServer
import com.sonyericsson.hudson.plugins.gerrit.trigger.PluginImpl
import com.sonyericsson.hudson.plugins.gerrit.trigger.VerdictCategory
import com.sonyericsson.hudson.plugins.gerrit.trigger.config.Config

def authkey = """${authkey}
"""
def serverName = "${name}"

def newGerritConfig = new Config()
newGerritConfig.with {
setGerritHostName("${hostname}")
setGerritUserName("${username}")
setGerritFrontEndURL("${frontendurl}")
setGerritSshPort(("${port}").toInteger())
setGerritProxy("${proxy}")
setGerritEMail("${email}")
buildCurrentPatchesOnly.setEnabled(("${build_current_patches_only}").toBoolean())
buildCurrentPatchesOnly.setAbortNewPatchsets(("${abort_new_patchsets}").toBoolean())
buildCurrentPatchesOnly.setAbortManualPatchsets(("${abort_manual_patchsets}").toBoolean())
buildCurrentPatchesOnly.setAbortSameTopic(("${abort_same_topic}").toBoolean())
setGerritAuthKeyFilePassword("${auth_key_file_password}")
}

def gerritAuthKeyFile = new File("${auth_key_file}")
gerritAuthKeyFile.write(authkey)
if ( gerritAuthKeyFile.exists() ) {
     newGerritConfig.setGerritAuthKeyFile(gerritAuthKeyFile)
}

def newCategories = newGerritConfig.getCategories()
if (!newCategories) {
    categories = new LinkedList<VerdictCategory>()
}
if (newCategories.isEmpty()) {
    newCategories.add(new VerdictCategory('Code-Review', 'Code Review'))
    newCategories.add(new VerdictCategory('Verified', 'Verified'))
}

Boolean compareObjects( Object a, b) {
    String aXML = Jenkins.XSTREAM.toXML(a).replaceAll(/\{AQA[^\}]+\}/) {
                      hudson.util.Secret.decrypt(it) }
    String bXML = Jenkins.XSTREAM.toXML(b).replaceAll(/\{AQA[^\}]+\}/) {
                      hudson.util.Secret.decrypt(it) }
    return aXML == bXML
}

if ( Jenkins.instance.pluginManager.activePlugins.find { it.shortName == 'gerrit-trigger' } != null ) {
    def gerritPlugin = Jenkins.instance.getPlugin(PluginImpl)
    def gerritTriggerPlugin = PluginImpl.getInstance()
    def gerritServers = gerritTriggerPlugin.getServerNames()

    def gerritServer = gerritPlugin.getServer(serverName)
    def newGerritServer = new GerritServer(serverName)

    newGerritConfig.setCategories(newCategories)

    def gerritServerExists = false
    gerritServers.each {
        serverName = (String) it
        if ( serverName == newGerritServer.getName() ) {
            gerritServerExists = true
        }
    }

    newGerritServer.setConfig(newGerritConfig)

    if (gerritServerExists){
        if (compareObjects(gerritServer, newGerritServer)) {
            print('SKIPPED')
        } else {
            if (gerritServer) {
                gerritServer.setConfig(newGerritServer.getConfig())
            } else {
                gerritPlugin.addServer(newGerritServer)
            }
            newGerritServer.start()
            newGerritServer.startConnection()
            Jenkins.instance.save()
            print('CHANGED')
        }
    } else {
        gerritPlugin.addServer(newGerritServer)
        print('CREATED')
        newGerritServer.start()
        newGerritServer.startConnection()
        Jenkins.instance.save()
    }
}
